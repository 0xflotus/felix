@select(tangler('mkplugins/extract_grammar.py'))
class PLUGIN(Plugin):
  name = 'extract_grammar'
  help = 'extract the grammar as a text file from ocamlyacc src'
    
  def runme(self):    
    print "GENERATING GRAMMAR"
    try:
      os.mkdir('misc')
    except:
      pass
    vxqt("env PYTHONPATH=. python script/get_grammar src/flx_parse.mly >misc/flx_parse.grammar")
    vxqt('env PYTHONPATH=. python script/flx_flx_grgen misc/flx_parse.grammar >lib/flx_grammar.flx')
    vxqt('env PYTHONPATH=. python script/elk_flx_lexgen misc/flx_parse.grammar >misc/elk_flx_lex.cc')
    vxqt('env PYTHONPATH=. python script/flx_tokgen misc/flx_parse.grammar >lib/flx_token.flx')

@head(1,"Felix Grammar")
@try:
  begin_displayed_code()
  f = open("misc/flx_parse.grammar")
  lines = f.readlines()
  f.close()
  for line in lines: weave(line)
 except:
  end_displayed_code()

@select(tangler('spkgs/grammar.py'))
iscr_source = ['lpsrc/flx_mkgrammar.pak']
weaver_directory = 'doc/grammar/'
pkg_requires = ['flx_compiler']

