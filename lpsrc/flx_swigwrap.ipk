@head(1,"Felix swig interfaces")
These files are used to build wrappers for 
C libraries using the felix language module
of swig.

@h = tangler('swig/makewrap','data')
@select(h)
@interfaces = [
  'gdk',
  'gtk',
  'slack',
  'gmp'
  ]
  
@x = "all:"
@for i in interfaces: x = x + " " + i + ".flx"
@tangle(x)

@for i in interfaces:
  tangle("")
  tangle(i +".flx: "+i+".i")
  tangle("\t./dynswig -extend=./felix.so -felix -I. -o "+i+".flx "+i+".i")

@head(1,"gdk")
Assumed location: /usr/include/gdk-2.0/

@h = tangler("swig/gdk.i","data")
@select(h)
%module gdk
%header %{
#include <gdk/gdk.h>
%}

// General notes
//
// We try to eliminate all the GNU, Glib, and other
// crap from the interface: Glib/Gdk/Gtk is very C
// dependent and highly fragile .. macros and casts
// abound 

// get rid of GNU crap
#define G_GNUC_CONST
#define G_CONST_RETURN
#define G_BEGIN_DECLS
#define G_END_DECLS

// replace glib type names with standard ones
#define gint int
#define guint unsigned int
#define gchar char
#define guchar unsigned char
#define gboolean int
#define gshort short
#define gushort unsigned short
#define gulong unsigned long

#define gint8 int8_t
#define gint16 int16_t
#define gint32 int32_t
#define gint64 int64_t

#define guint8 uint8_t
#define guint16 uint16_t
#define guint32 uint32_t
#define guint64 uint64_t

#define gfloat float
#define gdouble double
#define gldouble long double
#define gpointer void*

%bitmask(GdkGCValuesMask)
%bitmask(GdkDragAction)
%bitmask(GdkEventMask)

%callback_type(GdkInputFunction,1)
%callback_type(GdkEventFunc,2)
%callback_type(GdkFilterFunc,3)
%callback_type(GdkDestroyNotify,1)
%callback_type(GdkSpanFunc,2)

%callback_client(gdk_input_add_full,3,4)

%alias(GdkWChar)
%abstract(GdkAtom)
%abstract(GdkNativeWindow)

// X windows stuff
%felix %{
ctypes
  Display,
  XID,
  Cursor,
  Visual,
  Screen,
  Colormap,
  Atom,
  XImage,
  GC,
  Window,
  VisualID
;
%}

// cant handle this one, its weird (two callbacks and no client data)
%ignore gdk_input_add_full;

// this is hacked in gdkevents, by a typedef to void,
// the idea is to cast it
// -- to XEvent (in unix) or
// -- to MSG (in Windows)
// GdkFilterFunc uses a pointer to this type,
// which becomes a void*.
//
// Felix cant tolerate GdkXEvent as a type,
// because it tries to model it as an abstraction:
// even if it isn't used, we get a ptr_map (RTTI)
// structure generated which tries to take the sizeof void
//
%nowrap GdkXEvent
%felix %{
%}

// dont expose mutex variable
%ignore gdk_threads_mutex;

// Glib crap: these things are macroish, not real types
%felix %{
ctypes 
  GObject, 
  GObjectClass
;
%}


// Glib types
// we will have to wrap this one .. later
%felix %{
ctypes 
  GValue,
  GList,
  GSList,
  GDestroyNotify
;
%}

// gdk has some deliberately incomplete types
// we need to wrap them somehow .. this is a hack
// since it will be universally useless, need to
// figure out the correct technique a bit later ..
%felix %{
ctypes 
  _GdkDisplayManager,
  _GdkRegion
;
%}

// pixbufs -- temporarily make them abstract
// need to fix I guess ..
%felix %{
ctypes 
  GdkPixbuf,
  GdkPixbufAlphaMode
;
%}

// Pango things
// need to fix I guess ..
%felix %{
ctypes 
  PangoFont, 
  PangoFontDescription, 
  PangoGlyphString,
  PangoLayout,
  PangoLayoutLine,
  PangoDirection,
  PangoContext,
  PangoAttribute
;
%}

%define read(name)
%felix %{
open gdk##name;
module gdk##name 
{
%}
/*
%include /usr/include/gtk-2.0/gdk/gdk##name.h
*/
%include /usr/include/gtk-2.0/gdk/gdk##name.h
%felix %{}
%}
%enddef

%felix %{
typedef GType = ulong;
%}

%felix %{
open gdktypes;
module gdktypes
{
%}
%include /usr/include/gtk-2.0/gdk/gdktypes.h
%felix %{
}%}


#undef GDKVAR
#define GDKVAR
%felix %{
module gdk 
{
%}
%include /usr/include/gtk-2.0/gdk/gdk.h
%felix %{
}%}
#undef GDKVAR
#define GDKVAR

read(color);
read(cursor);
read(display);
read(displaymanager);
read(dnd);
read(drawable);
read(enumtypes);
read(events);
read(font);
read(gc);
read(i18n);
read(image);
read(input);
read(keys);
read(keysyms);
read(pango);
read(pixbuf);
read(pixmap);
read(private);
read(property);
read(region);
read(rgb);
read(screen);
read(selection);
read(visual);
read(window);
read(x);

@head(1,"gtk")
@h = tangler("swig/gtk.i","data")
@select(h)
%module gtk
// TODO

@head(1,"slack")
Raf's libslack utilities.
@h = tangler("swig/slack.i","data")
@select(h)
%module slack
#define __STDC__
%import "/usr/local/include/slack/hdr.h"

%callback_type(agent_action_t,2)
%callback_type(agent_reaction_t,2)
%callback_type(daemon_config_parser_t,1)

%include /usr/local/include/slack/agent.h
%include /usr/local/include/slack/coproc.h
%include /usr/local/include/slack/daemon.h
%include /usr/local/include/slack/fio.h
%include /usr/local/include/slack/hsort.h
%include /usr/local/include/slack/lim.h
%include /usr/local/include/slack/link.h
%include /usr/local/include/slack/list.h
%include /usr/local/include/slack/locker.h
%include /usr/local/include/slack/map.h
%include /usr/local/include/slack/mem.h
%include /usr/local/include/slack/msg.h
%include /usr/local/include/slack/net.h
%include /usr/local/include/slack/prog.h
%include /usr/local/include/slack/prop.h
%include /usr/local/include/slack/pseudo.h
%include /usr/local/include/slack/sig.h
%include /usr/local/include/slack/socks.h
%include /usr/local/include/slack/str.h

@head(1,'gmp')
Warning .. there is a bug in swig 1.1.20 preprocessor
handling trailing \ in preprocessor directives.
Please use 1.1.21 or the CVS version of swig patched
for felix, or apply the swig preprocessor patch provided.

@h = tangler("swig/gmp.i","data")
@select(h)
%module gmp
%header %{
#include <gmp.h>
%}

%ignore __GMP_HAVE_HOST_CPU_FAMILY_power;
%ignore __GMP_HAVE_HOST_CPU_FAMILY_powerpc;
%ignore __GMP_LIBGMP_DLL;
%ignore __GMP_HAVE_CONST;
%ignore __GMP_HAVE_PROTOTYPES;
%ignore __GMP_HAVE_TOKEN_PASTE;
%ignore __GMP_INLINE_PROTOTYPES;
%ignore __GMP_MP_SIZE_T_INT;

%abstract(mp_limb_t)
%abstract(mp_limb_signed_t)
%alias(mp_ptr)
%alias(mp_srcptr)

%abstract(mpz_t)
%abstract(mpq_t)
%abstract(mpf_t)

%alias(mpz_ptr)
%alias(mpz_srcptr)
%alias(mpq_ptr)
%alias(mpq_srcptr)
%alias(mpf_ptr)
%alias(mpf_srcptr)

%alias(mp_size_t)
%alias(mp_exp_t)
#define __STDC__


%include <gmp.h>

