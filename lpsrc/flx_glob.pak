@import config

@head(1,'Directory Services (glob)')
@head(2,"Category Reference",nospawn=1)
@h = tangler('config/flx_glob.fpc')
@select(h)
Name: glob
Description: Directory Serivces
Version: $Id$

@if config.HAVE_MSVC:
   tangle("provides_dlib: /DEFAULTLIB:libflx_glob_dynamic")
   tangle("provides_slib: /DEFAULTLIB:libflx_glob_static")
 elif config.WIN32:
   tangle("provides_dlib: -lflx_glob_dynamic")
   tangle("provides_slib: -lflx_glob_static")
 else:
   pass

@h = tangler('spkgs/flx_glob.py')
@select(h)
import os
import glob

import config

iscr_source = ["lpsrc/flx_glob.pak"]
weaver_directory = 'doc/rtl/flx_glob/'
xfiles = [os.path.join('src', 'unixem', '*')]

rtl_interfaces = ['config/target/flx_glob_config.hpp', 'src/unixem/flx_glob.hpp']
felix_rtl = ['src/unixem/glob.flx']

cpp_cpps = []
if config.WIN32:
  cpp_cpps.extend([
    'src/unixem/flx_glob',
    'src/unixem/unixem_util',
  ])

lib_requires = ['libflx_gc']
pkg_requires = ['flx_rtl'] # flx_rtl provides flx_rtl_config.hpp
build_macro = "GLOB"

root = config.FLX_DIR
unit_tests = [('test', 'glob', 'glob-*.flx')]

@h=tangler('config/target/flx_glob_config.hpp')
@select(h)
#ifndef __FLX_GLOB_CONFIG_H__
#define __FLX_GLOB_CONFIG_H__
#include "flx_rtl_config.hpp"
#ifdef BUILD_GLOB
#define GLOB_EXTERN FLX_EXPORT
#else
#define GLOB_EXTERN FLX_IMPORT
#endif
#endif

@select(tangler("licences/glob.txt"))
/* /////////////////////////////////////////////////////////////////////////////
 * File:    glob.c
 *
 * Purpose: Definition of the glob() API functions for the Win32 platform.
 *
 * Created: 13th November 2002
 * Updated: 12th September 2006
 *
 * Home:    http://synesis.com.au/software/
 *
 * Copyright (c) 2002-2006, Matthew Wilson and Synesis Software
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * - Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 * - Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 * - Neither the names of Matthew Wilson and Synesis Software nor the names of
 *   any contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 * ////////////////////////////////////////////////////////////////////////// */
