@h = tangler('src/flx_name.mli')
@select(h)
val cpp_name :
  Flx_types.fully_bound_symbol_table_t ->
  int ->
  string

@h = tangler('src/flx_name.ml')
@select(h)
open Flx_types
let cpp_name bbdfns index =
  let id,parent,entry = 
    try Hashtbl.find bbdfns index 
    with _ -> failwith ("[cpp_name] Can't find index " ^ string_of_int index)
  in
  (match entry with
  | BBDCL_function _ -> "_function_"   
  | BBDCL_procedure _  -> "_procedure_"
  | BBDCL_var _ -> "_var_"
  | BBDCL_val _ -> "_val_"
  | _ -> failwith "cpp_name expected func,proc,var or val"
  ) ^ string_of_int index ^ "_" ^ id


