@execfile('config'+os.sep+'config.py')
@head(1,'demux')

@h = tangler('spkgs/demux.py')
@select(h)

DEMUXRTL_INTERFACES = [
  'config/target/flx_demux_config.hpp', # portable

  # portable
  'src/demux/flx_demux.hpp',
  'src/demux/demux_demuxer.hpp',
  'src/demux/demux_timer_queue.hpp',
  'src/demux/demux_quitter.hpp',

  # windows (monolithic)
  'src/demux/win/demux_iocp_demuxer.hpp',
  'src/demux/win/demux_overlapped.hpp',
  'src/demux/win/demux_win_timer_queue.hpp',
  'src/demux/win/demux_wself_piper.hpp',

  # posix
  'src/demux/posix/demux_posix_demuxer.hpp',
  'src/demux/posix/demux_posix_timer_queue.hpp',
  'src/demux/posix/demux_pfileio.hpp',
  'src/demux/posix/demux_select_demuxer.hpp',
  'src/demux/posix/demux_sockety.hpp',
  'src/demux/posix/demux_self_piper.hpp',
  'src/demux/posix/demux_ts_select_demuxer.hpp',

  # linux, 10.3 (select impl), 10.4 real.
  'src/demux/poll/demux_poll_demuxer.hpp',
  'src/demux/poll/demux_ts_poll_demuxer.hpp',

  'src/demux/epoll/demux_epoll_demuxer.hpp',     # linux (>= 2.6)
  'src/demux/kqueue/demux_kqueue_demuxer.hpp',   # osx(10.3 onwards)/bsd
  'src/demux/evtport/demux_evtport_demuxer.hpp', # solaris (9 onwards?)
]

DEMUX_CPPS = [
  'src/demux/flx_demux',
  'src/demux/demux_demuxer',
  'src/demux/demux_quitter',
]

POSIX_DEMUX_CPPS = [
  'src/demux/posix/demux_posix_demuxer',      # posix
  'src/demux/posix/demux_select_demuxer',     # posix
  'src/demux/posix/demux_posix_timer_queue',  # posix
  'src/demux/posix/demux_sockety',            # posix
  'src/demux/posix/demux_self_piper',         # posix
  'src/demux/posix/demux_pfileio',            # posix
  'src/demux/posix/demux_ts_select_demuxer',  # posix
]

POLL_DEMUX_CPPS = [
   # I've seen poll on linux and osx10.4 systems.
   # conditionally compiled and used.
  'src/demux/poll/demux_poll_demuxer',       # I've seen this on linux and osx10.4
  'src/demux/poll/demux_ts_poll_demuxer',    # ditto
]

WINDOWS_DEMUX_CPPS = [
  'src/demux/win/demux_iocp_demuxer',       # windows
  'src/demux/win/demux_overlapped',         # windows
  'src/demux/win/demux_wself_piper',        # windows
  'src/demux/win/demux_win_timer_queue',    # windows
]

EXTRA_SYS_LIBS = ''
if WIN32:
  DEMUX_CPPS = DEMUX_CPPS + WINDOWS_DEMUX_CPPS
  if HAVE_MSVC:
    EXTRA_SYS_LIBS = '/DEFAULTLIB:ws2_32 /DEFAULTLIB:mswsock '
  else:
    # mingw
    EXTRA_SYS_LIBS = '-lws2_32 -lmswsock '


if POSIX:
  DEMUX_CPPS = DEMUX_CPPS + POSIX_DEMUX_CPPS

if HAVE_KQUEUE_DEMUXER:
  DEMUX_CPPS = DEMUX_CPPS + [ 'src/demux/kqueue/demux_kqueue_demuxer' ]

if HAVE_POLL:
  DEMUX_CPPS = DEMUX_CPPS + POLL_DEMUX_CPPS

if HAVE_EPOLL:
  DEMUX_CPPS = DEMUX_CPPS + [ 'src/demux/epoll/demux_epoll_demuxer' ] # Linux 2.6 +

if HAVE_EVTPORTS:
  DEMUX_CPPS = DEMUX_CPPS + [ 'src/demux/evtport/demux_evtport_demuxer'] # solaris 10

if SOLARIS:
  # RF: this might not be necessary anymore.
  EXTRA_SYS_LIBS = '-lsocket -lnsl '

cpp_cpps = DEMUX_CPPS
lib_requires = ['libflx_pthread']  # however libflx not needed
pkg_requires = ['flx_pthread', 'flx_rtl'] # flx_rtl for config .hpp
dflags = EXTRA_SYS_LIBS
sflags = EXTRA_SYS_LIBS
build_macro = 'DEMUX'

rtl_interfaces = DEMUXRTL_INTERFACES
felix_rtl = ['src/demux/flx_demux.flx']

iscr_source = [
  'lpsrc/flx_demux.pak',
]

weaver_directory = 'doc/rtl/flx_demux/'
tmpdir = ['demux']
xfiles = [
  os.path.join('src', 'demux', '*'),
  os.path.join('src', 'demux', 'epoll', '*'),
  os.path.join('src', 'demux', 'evtport', '*'),
  os.path.join('src', 'demux', 'kqueue', '*'),
  os.path.join('src', 'demux', 'poll', '*'),
  os.path.join('src', 'demux', 'posix', '*'),
  os.path.join('src', 'demux', 'win', '*'),
]

@h = tangler('config/demux.fpc')
@select(h)
Name: demux
Description: Event handling
Version: $Id$

@if HAVE_MSVC:
   tangle("provides_dlib: /DEFAULTLIB:libdemux_dynamic")
   tangle("requires_dlibs: /DEFAULTLIB:ws2_32 /DEFAULTLIB:mswsock")
   tangle("provides_slib: /DEFAULTLIB:libdemux_static")
   tangle("requires_slibs: /DEFAULTLIB:ws2_32 /DEFAULTLIB:mswsock")
 elif WIN32:
   tangle("provides_dlib: -ldemux_dynamic")
   tangle("requires_dlibs: -lws2_32 -lmswsock")
   tangle("provides_slib: -ldemux_static")
   tangle("requires_slibs: -lws2_32 -lmswsock")
 elif SOLARIS:
   tangle("provides_dlib: -ldemux_dynamic")
   tangle("provides_slib: -ldemux_static -lsocket -lnsl")
 else:
   tangle("provides_dlib: -ldemux_dynamic")
   tangle("provides_slib: -ldemux_static")

Requires: flx_pthread
flx_requires_driver: flx_arun

@select(tangler('config/target/flx_demux_config.hpp'))
#ifndef __FLX_DEMUX_CONFIG_H__
#define __FLX_DEMUX_CONFIG_H__
#include "flx_rtl_config.hpp"
#ifdef BUILD_DEMUX
#define DEMUX_EXTERN FLX_EXPORT
#else
#define DEMUX_EXTERN FLX_IMPORT
#endif
#endif

@select(tangler('config/target/demux_sockety_config.hpp'))
#ifndef __DEMUX_SOCKETY_CONFIG_H__
#define __DEMUX_SOCKETY_CONFIG_H__
#include <sys/socket.h>

@tangle('typedef %s FLX_SOCKLEN_T;' % FLX_SOCKLEN_T)
#endif
