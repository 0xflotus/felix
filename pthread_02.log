[FLX_DEBUG] Debug enabled for static link program
[FLX_DEBUG_THREADS] Threads debug enabled
[FLX_DEBUG_ALLOCATIONS] Allocation debug enabled
[FLX_DEBUG_COLLECTIONS] Collection debug enabled
[FLX_REPORT_COLLECTIONS] Collection report enabled
[FLX_DEBUG_DRIVER] Driver debug enabled
[FLX_FINALISE] Finalisation Disabled
[FLX_GC_FREQ] call gc every 1000 iterations
[FLX_MIN_MEM] call gc only if more than 1000 Meg heap used
[FLX_MAX_MEM] terminate if more than 18446744073709 Meg heap used
[FLX_FREE_FACTOR] reset gc trigger 1.10 times heap used after collection
[FLX_ALLOW_COLLECTION_ANYWHERE] True
flx_argv[0]->pthread_02.exe
flx_argv[1]->build\release\test\tut
[flx_world: setup]
[flx_world: setup] Created allocator
INITIALISING THREAD CONTROL OBJECT
[flx_world: setup] Created thread control object
[flx_world: setup] Created ts collector
[flx_world: setup] Created gc profile object
[gc] Malloc 128 bytes, address = 000000241F3B8CC0
[gc] Allocated 000000241F3B8CC0, shape=dynlink::flx_dynlink_t[1][1][#a=0,#d=0]
[gc] Add root 000000241F3B8CC0=dynlink::flx_dynlink_t
[flx_world: setup] Created library object
[flx_world:setup] flx_run driver begins pthread_02.exe
Adding thread FFFFFFFFFFFFFFFE base 000000241F1CF980, count=1
[gc] Malloc 56 bytes, address = 000000241F3BD960
[gc] Allocated 000000241F3BD960, shape=dynlink::flx_libinst[1][1][#a=0,#d=0]
[gc] Add root 000000241F3BD960=dynlink::flx_libinst
[libinst:create] Creating instance for library 000000241F3B8CC0->''
[libinst:create] Creating thread frame
[gc] Malloc 56 bytes, address = 000000241F3BD580
[gc] Allocated 000000241F3BD580, shape=pthread_02::thread_frame_t[1][1][#a=0,#d=0]
[libinst:create] thread frame CREATED 000000241F3BD580
[libinst:create] CREATING start_proc by running start_sym 00007FF6EE70214E
[gc] Malloc 160 bytes, address = 000000241F3BE800
[gc] Allocated 000000241F3BE800, shape=pthread_02::_init_[1][1][#a=0,#d=0]
[libinst:create] start_proc CREATED 000000241F3BE800
[libinst:create] CREATING main_proc by running main_sym 00007FF6EE701DBB
[libinst:create] main_proc CREATED 0000000000000000
Removed thread FFFFFFFFFFFFFFFE, count=0
[flx_world:setup] loaded library pthread_02.exe at 0000000000000000
[flx_world:setup] thread frame at 000000241F3BD580
[flx_world:setup] initial continuation at 000000241F3BE800
[flx_world:setup] main continuation at 0000000000000000
[flx_world:setup] creating async scheduler
[gc] Malloc 8 bytes, address = 000000241F3C8020
[gc] Allocated 000000241F3C8020, shape=rtl::fthread_t[1][1][#a=0,#d=0]
[gc] Add root 000000241F3C8020=rtl::fthread_t
Adding thread FFFFFFFFFFFFFFFE base 000000241F1CFAE0, count=1
prun: sync_run
prun: Before running: Sync state is Next fthread pos
[sync] frun: entry ft=0000000000000000, active size=1
[gc] Malloc 104 bytes, address = 000000241F3C6DE0
[gc] Allocated 000000241F3C6DE0, shape=pthread_02::_lam_63046[1][1][#a=0,#d=0]
[gc] Malloc 104 bytes, address = 000000241F3BE8E0
[gc] Allocated 000000241F3BE8E0, shape=pthread_02::_lam_63046[1][1][#a=0,#d=0]
[gc] Malloc 8 bytes, address = 000000241F3C7F30
[gc] Allocated 000000241F3C7F30, shape=rtl::fthread_t[1][1][#a=0,#d=0]
[gc] Malloc 8 bytes, address = 000000241F3C8570
[gc] Allocated 000000241F3C8570, shape=pthread_02::_a6641t_66413[1][1][#a=0,#d=0]
[gc] Malloc 72 bytes, address = 000000241F3CA7D0
[gc] Allocated 000000241F3CA7D0, shape=pthread_02::svc[1][1][#a=0,#d=0]
[flx_sync:sync_sched] dispatching service request 5
prun: After running: Sync state is delegated/Next request pos
sync_sched:delegated request 5
[prun: spawn_pthread] Spawn pthread 000000241F3C7F30
[gc] Add root 000000241F3C7F30=rtl::fthread_t
[prun: spawn_pthread] Starting new pthread, thread counter= 1
[prun: spawn_pthread] Thread FFFFFFFFFFFFFFFE waiting for spawned thread to register itself
Spawned Thread 0000000000001358 start stack base = 000000241F8CFE58, tc=000000241F3BE260
Adding thread FFFFFFFFFFFFFFFE base 000000241F8CFE58, count=2
[yield: thread=FFFFFFFFFFFFFFFE]
prun: sync_run
prun: Before running: Sync state is Next fthread pos
[sync] frun: entry ft=0000000000000000, active size=1
[suspend: thread= FFFFFFFFFFFFFFFE]
[unsafe_suspend:thread=FFFFFFFFFFFFFFFE], stack=000000241F8CF968!
[unsafe_suspend: thread=FFFFFFFFFFFFFFFE] stack base 000000241F1CFAE0 > stack top 000000241F8CF968, Stack size = -7339656
[unsafe_suspend]: active thread count now 1
[unsafe_suspend]: stop_guard.broadcast() done^C