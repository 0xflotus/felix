module sys::time_h
{
  open C_hack;

  header "#include <sys/time.h>";

  type time_t = "time_t";
  type suseconds_t = "suseconds_t";

  fun _ctor_float: time_t -> float = "static_cast<float>($1)";
  fun _ctor_float: suseconds_t -> float = "static_cast<float>($1)";

  fun _ctor_double: time_t -> double = "static_cast<double>($1)";
  fun _ctor_double: suseconds_t -> double = "static_cast<double>($1)";

  cstruct timeval {
    tv_sec: time_t;
    tv_usec: suseconds_t;
  }

  proc gettimeofday: ptr[timeval] = "gettimeofday($1, NULL);";

  gen get_time () = {
    var tv:timeval;
    gettimeofday(addr tv);
    return _ctor_double(tv.tv_sec) + (_ctor_double(tv.tv_usec) / 1.0e6);
  }
}
