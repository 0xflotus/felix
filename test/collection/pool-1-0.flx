include "collection/pool";
open Pool[string];
instance Pool[string] {
  proc destroy_member(s:string) { println("Shreding:"+s); }  
}

println("Circular Pool Test");
var j=0;
var k = 0;
var n = pool((fun () ={ k++;return "CIR Member "+str(k);}),size(3),CIR);
for j in 0 upto 7 do
    println(n.get_next());
done
n.destroy();

println("Infinite Pool Test");
j=0;
var l = 0;
n = pool((fun ()={ l++;return "INF Member "+str(l);}),size(3),INF);
var m = n.get_next();
println(m);
for var u in 0 upto 7 do
    println(n.get_next());
done
println("Freeing first member");
n.free(let Some ?p = m in p);
for j in 0 upto 3 do
    println(n.get_next());
done
n.destroy();

println("Finite Pool Test");
j=0;
var o = 0;
n = pool((fun ()={ o++;return "FIN Member "+str(o);}),size(3),FIN);
m = n.get_next();
println(m);
for j in 0 upto 4 do
    println(n.get_next());
done
println("Freeing first member");
n.free(let Some ?p = m in p);
println(n.get_next());
println(n.get_next());
n.destroy();

