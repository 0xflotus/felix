#line 2000 "../lpsrc/flx_regress.pak"
//Check types:recursive
//Check type functions:recursive

typedef fun uncurry(t:TYPE):TYPE =>
  typematch t with
  | ?head -> ?tail => head * uncurry tail
  | _ => t
  endmatch
;

typedef f123 = int -> (long -> float);

typedef f567 = uncurry f123;

var x: f567 = 1, (2L, 3.0f);

typedef list = 1 + int * list;

typedef fun lst(t1:TYPE, t2:TYPE ):TYPE=> 1 + t1 * lst (t2,t1);

var y1: lst (int,long);
var y2:  1 + int * (1 + long * x)  as x;
y1 = y2;

