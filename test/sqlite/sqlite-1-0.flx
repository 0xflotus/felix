include "sqlite3/sqlite3";
open Sqlite3;

fun subscript: & &char * int -> &char = "$1[$2]";

cfun eh(data:address, ncols:int, values: &&char, names: &&char):int =
{
  var ii:int = 0;
  while ii<ncols do
    print$ str names.[ii] + "=" + str values.[ii];
    if ii<ncols- 1  do print ", ";  done;
    ++ii;
  done;
  println "";
  return 0;
}

proc run(db:sqlite3_db_t) {
  sql :=
    "drop table if exists fred;",
    "create table fred (name, address);",
    "insert into fred values('joe','wigram');",
    "insert into fred values('max','gpr');",
    "insert into fred values('lee','wax');",
    "insert into fred values('henry','pollen');",
    "select all name,address from fred;",
    ""
  ;
  var usr: address =  address c"user pointer";
  var errm: &char =  c"";

  var i = 0;
  var p = sql.[i];
  while p != "" do
    println p;
    val cb : sqlite3_exec_callback_t = eh;
    res := sqlite3_exec(db,p,cb,usr,&errm);
    if res !=0 do
      println$ "exec DB error[abort]: " + errm;
      return;
    done;
    ++i;
    p = sql.[i];
  done;
}

println "Hello";
var db : sqlite3_db_t;
err := sqlite3_open("mydb.db", &db);
if err != 0 do
  print "open DB error[abort] ";
  println $ sqlite3_errmsg db;
  goto finish;
done;

run(db);

finish:>
  sqlite3_close(db);
