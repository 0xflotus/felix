syntax requirements {
  srequires_clause := "requires" srequirements =># "_2";

  srequires_clause := sepsilon =># "'rreq_true";

  srequirement:= squalified_name =># "`(Named_req ,_1)";
  srequirement :=  "property" sstring =># "`(Property_req ,_2)";
  srequirement :=  "package" scode_spec =># "`(Package_req ,_2)";

  srequirement_atom:= srequirement =># "`(rreq_atom ,_1)";
  srequirement_atom:= "(" srequirements ")" =># "_2";

  srequirement_and:= srequirement_and "and" srequirement_atom =>#
    "`(rreq_and ,_1 ,_3)";
  srequirement_and:= srequirement_atom =># "_1";

  srequirement_or:= srequirement_or "or" srequirement_and =>#
    "`(rreq_or ,_1 ,_3)";
  srequirement_or:= srequirement_and =># "_1";

  srequirements:= srequirements , srequirement_or =>#
    "`(rreq_and ,_1 ,_3)";
  srequirements:= srequirement_or =># "_1";

  srequirement := "body" scode_spec =># "`(Body_req ,_2)";
  srequirement := "header" scode_spec =># "`(Header_req ,_2)";

  scode_spec := sstring =># "`(StrTemplate ,_1)";
  scode_spec := scstring =># "`(Str ,_1)";
  scode_spec := "ident" =># "'Identity";

  tstatement := "requires" srequirements ";" =>#
    """`(ast_insert ,_sr "_root" ,dfltvs (Str "") body ,_2)""";

  tstatement := sname "requires" srequirements ";" =>#
    """`(ast_insert ,_sr ,_1 ,dfltvs (Str "") body ,_3)""";

  tstatement := "header" scode_spec srequires_clause ";" =>#
    """`(ast_insert ,_sr "_root" ,dfltvs ,_2 header ,_3))""";
  tstatement := "body" scode_spec srequires_clause ";" =>#
    """`(ast_insert ,_sr "_root" ,dfltvs ,_2 body ,_3))""";
  tstatement := "header" = scode_spec srequires_clause ";" =>#
    """`(ast_insert ,_sr "_root" ,dfltvs ,_3 header ,_4))""";
  tstatement := "body" = scode_spec srequires_clause ";" =>#
    """`(ast_insert ,_sr "_root" ,dfltvs ,_3 body ,_4))""";
  tstatement := "header" sdeclname = scode_spec srequires_clause ";" =>#
    """
    `(ast_insert ,_sr ,(first _2) ,(second _2) ,_4 header ,_5)
     """;

  tstatement := "body" sdeclname = scode_spec srequires_clause ";" =>#
    """
    `(ast_insert ,_sr ,(first _2) ,(second _2) ,_4 body ,_5)
     """;
}

