publish """
Decorator type definitions and selector/action function 
"""
fun equals (s1:string) (s2:string) => s1 == s2;


class Decorators {
  open ServerConfig;
  open HTTPRequest;
  open HTTPConnection;
  open HTTPHandler;
  open HTTPResponse;
  open XML2;

  typedef decorator = (xml_node_ptr->bool)*(http_connection*http_request*xml_node_ptr->void);
  typedef decorators = list[decorator];
  
  private fun equals (s1:string) (s2:string) => s1 == s2;
 

  publish """ Takes a list tuples containing a predicate node matching function and a 
    request handler procedure preforms action if node matches predicate as
    the document is traversed """
  proc find_all_and_do (pred_action:decorators,conn:http_connection,request:http_request,node:xml_node_ptr)  {
     proc wrkr(n:xml_node_ptr) {
      iter (proc(pv:decorator) {
         if pv.(0)(n) do
	    pv.1(conn,request,n);
          done
         }) pred_action;
      if not isNull[xml_node_ptr]((*n).children) do 
        wrkr(*n.children);
      done
      if not isNull[xml_node_ptr]((*n).next) do
        wrkr(*n.next);
      done
    }
    wrkr(node);
  }
  
  proc find_all_in_doc_and_do (pred_action:decorators,conn:http_connection,request:http_request,doc:xml_doc_ptr) { 
    find_all_and_do((pred_action),conn,request,xml_doc_get_root_element(doc));
  }



}
