class FlxGuiButton
{
  union button_state_t =  
    | Up       // ready
    | Down     // being clicked
    | Disabled // inactive
  ;

  interface button_model_t 
  {
    get_state: 1 -> button_state_t;
    set_state: button_state_t -> 0;
  }

  object ButtonModel (init_state:button_state) =
  {
    var state = init_state;
    method fun get_state() => state;
    method proc set_state (s:button_state_t) => state = s;
  }

  typedef button_colour_scheme_t = 
  (
    label_colour: colour_t,
    bg_colour: colour_t,
    top_colour: colour_t,
    left_colour: colour_t,
    bottom_colour: colour_t,
    right_colour: colour_t
  );

  object ButtonDisplay (b:button_model_t) 
  (
    w:window_t, // change to surface later
    font:font_t, 
    label:string, 
    up_colour: button_colour_scheme_t,
    down_colour: button_colour_scheme_t,
    disabled_colour: button_colour_scheme_t,
    left_x:int, top_y:int, right_x:int, bottom_y:int,
    origin_x:int, origin_y:int,
   ) =
   {
     method proc draw()
     {
       var state = b.get_state ();
       var scheme = match state with
         | Up => up_colour
         | Down => down_colour
         | Disabled => disabled_colour
       ;
       // top
       w.draw_line (scheme.top_colour, left_x - 2,top_y - 2,right_x - 2, top_y + 2); 
       w.draw_line (scheme.top_colour, left_x - 1,top_y - 1,right_x - 1, top_y + 1); 
       // left
       w.draw_line (scheme.left_colour, left_x - 2,top_y - 2,left_x - 2, bottom_y + 2); 
       w.draw_line (scheme.left_colour, left_x - 1,top_y - 1,left_x - 1, bottom_y + 1); 
       // right
       w.draw_line (scheme.right_colour, right_x - 2,top_y - 2,right_x - 2, bottom_y + 2); 
       w.draw_line (scheme.right_colour, right_x - 1,top_y - 1,right_x - 1, bottom_y + 1); 
       // bottom
       w.draw_line (scheme.bottom_colour, left_x - 2,bottom_y - 2,right_x - 2, bottom_y + 2); 
       w.draw_line (scheme.bottom_colour, left_x - 1,bottom_y - 1,right_x - 1, bottom_y + 1); 

       w.fill(rect_t (left_x, top_y, right_x - left_x + 1, bottom_y - top_y + 1), scheme.bg_colour);
       w.write (origin.x, origin.y, font, scheme.label_colour, label);
     }
   }
}
