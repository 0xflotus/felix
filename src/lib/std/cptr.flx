typedef fun n"@" (T:TYPE) : TYPE => cptr[T]; 
typedef ptr[T] = &T;
union cptr[T] = | nullptr | Ptr of &T;

ctor[T] cptr[T]: &T -> @T = "$1"; // safe
ctor[T] ptr[T]( px:@T) => let Ptr  ?p = px in p; // match failure if null
fun deref[T] (px:@T)=> *(px.ptr); // checked deref
fun is_nullptr[T] (px:@T)=> match px with | nullptr => true | _ => false endmatch;
