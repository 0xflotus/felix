publish "System Interface"
module System
{
  const argc:int = "PTF argc";
  const _argv:&charp= "PTF argv";

  fun argv:int -> string = '::std::string($1<0||$1>=PTF argc??"":PTF argv[$1])';
  fun args () => List::map (the argv) (List::range argc);
  fun system: string -> int = "::std::system($1.data())"
    requires Cxx_headers::cstdlib;
  proc exit: int = '::std::exit($1);' requires Cxx_headers::cstdlib;
  proc abort: 1 = "::std::abort($1);" requires Cxx_headers::cstdlib;
  type ptf_t = "thread_frame_t*";
  const ptf:ptf_t = "FLX_POINTER_TO_THEAD_FRAME";
}

