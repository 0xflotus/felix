include "stl/stl_vector";


module glob {
  open Stl_Vector;
  // glob
  requires package "flx_glob";
  cstruct glob_t {
    gl_pathc: size;
    gl_pathv: &&char;
    gl_offs: size;
  };
  private proc post_incr[t]: &&t = "(*$1)++;";

  gen glob: string * &glob_t -> bool = "0==::glob($1.c_str(),0,NULL,$2)";
  proc globfree: &glob_t = "globfree($1);";

  gen glob (pat:string): stl_vector[string] =
  {
    var files: stl_vector[string];
    var glob_data: glob_t;
    glob_data.gl_offs = size 0;
    if glob(pat,&glob_data) do
      var n = glob_data.gl_pathc;
      var p = glob_data.gl_pathv;
      var pfile = *p;
      whilst not C_hack::isNULL(pfile) do
        var file = str(pfile);
        push_back (files, file);
        p++;
        pfile = *p;
      done;
      globfree(&glob_data);
    done;
    return files;
  }
}
