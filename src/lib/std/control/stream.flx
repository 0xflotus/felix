//$ Class of data structures supporting streaming.
//$ The container type just needs an iterator method.
//$ The iterator method returns a generator which
//$ yields the values stored in the container.
open class Streamable[ContainerType, ValueType] {
  virtual fun iterator : ContainerType -> 1 -> opt[ValueType];

  // check if a streamable x is a subset of a set y.
  fun \subseteq[T with Set[T,ValueType]] (x:ContainerType, y:T) = 
  {
    for v in x do
      if not (v \in y) goto bad;
    done
    return true;
bad:>
    return false;
  }
}


