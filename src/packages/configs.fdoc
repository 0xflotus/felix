@tangler linux64_gcc_flx_rtl_config_params.hpp     = $PWD/src/config/linux64/gcc/rtl/flx_rtl_config_params.hpp
@tangler macosx64_clang_flx_rtl_config_params.hpp  = $PWD/src/config/macosx64/clang/rtl/flx_rtl_config_params.hpp
@tangler win64_msvc_flx_rtl_config_params.hpp      = $PWD/src/config/win64/msvc/rtl/flx_rtl_config_params.hpp

@tangler linux64_demux_sockety_config.hpp          = $PWD/src/config/linux64/rtl/demux_sockety_config.hpp
@tangler macosx64_demux_sockety_config.hpp         = $PWD/src/config/macosx64/rtl/demux_sockety_config.hpp
@tangler win64_demux_sockety_config.hpp            = $PWD/src/config/linux64/rtl/demux_sockety_config.hpp

@tangler linux.flxh                                = $PWD/src/config/unix/flx.flxh
@tangler macosx.flxh                               = $PWD/src/config/macosx/flx.flxh
@tangler win.flxh                                  = $PWD/src/config/win/flx.flxh



@title Platform configs
@h1 OSX
@tangle macosx64_demux_sockety_config.hpp 
#ifndef __DEMUX_SOCKETY_CONFIG_H__
#define __DEMUX_SOCKETY_CONFIG_H__
#include <sys/socket.h>
typedef socklen_t FLX_SOCKLEN_T;
#endif
@

@tangle macosx64_clang_flx_rtl_config_params.hpp 
#ifndef __FLX_RTL_CONFIG_PARAMS_H__
#define __FLX_RTL_CONFIG_PARAMS_H__

#define FLX_HAVE_VSNPRINTF 1
#define FLX_HAVE_GNU 1
#define FLX_HAVE_GNU_BUILTIN_EXPECT 1
#define FLX_HAVE_CGOTO 1
#define FLX_HAVE_ASM_LABELS 1
#define FLX_HAVE_DLOPEN 1
#define FLX_CYGWIN 0
#define FLX_MACOSX 1
#define FLX_LINUX 0
#define FLX_WIN32 0
#define FLX_WIN64 0
#define FLX_POSIX 1
#define FLX_SOLARIS 0
#define FLX_HAVE_MSVC 0
#define FLX_HAVE_KQUEUE_DEMUXER 1
#define FLX_HAVE_POLL 1
#define FLX_HAVE_EPOLL 0
#define FLX_HAVE_EVTPORTS 0
#define FLX_HAVE_OPENMP 0
#define FLX_MAX_ALIGN 16
#endif
@
@h1 Linux
@tangle linux64_demux_sockety_config.hpp 
#ifndef __DEMUX_SOCKETY_CONFIG_H__
#define __DEMUX_SOCKETY_CONFIG_H__
#include <sys/socket.h>
typedef socklen_t FLX_SOCKLEN_T;
#endif
@

@tangle linux64_gcc_flx_rtl_config_params.hpp 
#ifndef __FLX_RTL_CONFIG_PARAMS_H__
#define __FLX_RTL_CONFIG_PARAMS_H__

#define FLX_HAVE_VSNPRINTF 1
#define FLX_HAVE_GNU 1
#define FLX_HAVE_GNU_BUILTIN_EXPECT 1
#define FLX_HAVE_CGOTO 1
#define FLX_HAVE_ASM_LABELS 1
#define FLX_HAVE_DLOPEN 1
#define FLX_CYGWIN 0
#define FLX_MACOSX 0
#define FLX_LINUX 1
#define FLX_WIN32 0
#define FLX_WIN64 0
#define FLX_POSIX 1
#define FLX_SOLARIS 0
#define FLX_HAVE_MSVC 0
#define FLX_HAVE_KQUEUE_DEMUXER 0
#define FLX_HAVE_POLL 1
#define FLX_HAVE_EPOLL 1
#define FLX_HAVE_EVTPORTS 0
#define FLX_HAVE_OPENMP 1
#define FLX_MAX_ALIGN 16
#endif
@

@h1 Windows
@tangle win64_msvc_flx_rtl_config_params.hpp 
#ifndef __FLX_RTL_CONFIG_PARAMS_H__
#define __FLX_RTL_CONFIG_PARAMS_H__

#define FLX_HAVE_VSNPRINTF 1
#define FLX_HAVE_GNU 0
#define FLX_HAVE_GNU_BUILTIN_EXPECT 0
#define FLX_HAVE_CGOTO 0
#define FLX_HAVE_ASM_LABELS 0
#define FLX_HAVE_DLOPEN 0
#define FLX_CYGWIN 0
#define FLX_MACOSX 0
#define FLX_LINUX 0
#define FLX_WIN32 1
#define FLX_WIN64 1
#define FLX_POSIX 0
#define FLX_SOLARIS 0
#define FLX_HAVE_MSVC 0
#define FLX_HAVE_KQUEUE_DEMUXER 0
#define FLX_HAVE_POLL 0
#define FLX_HAVE_EPOLL 0
#define FLX_HAVE_EVTPORTS 0
#define FLX_HAVE_OPENMP 1
#define FLX_MAX_ALIGN 16
#endif
@

@tangle win64_demux_sockety_config.hpp
#ifndef __DEMUX_SOCKETY_CONFIG_H__
#define __DEMUX_SOCKETY_CONFIG_H__
namespace flx { namespace demux {
DEMUX_EXTERN  int create_listener_socket (int *io_port, int q_len);
DEMUX_EXTERN  int create_async_listener(int *io_port, int q_len);
DEMUX_EXTERN  int nice_accept(int *listener, int *err);
DEMUX_EXTERN  int nice_connect(char const* addr, int port);
DEMUX_EXTERN  int async_connect(char const* addr, int port, int *finished, int *err);
DEMUX_EXTERN  int bind_sock(int s, int *io_port);
DEMUX_EXTERN  int make_nonblock(int s);
DEMUX_EXTERN  int make_linger(int s, int t);
DEMUX_EXTERN  int set_tcp_nodelay(int s, int dsable_nagle);
DEMUX_EXTERN  int get_socket_error(int s, int *socket_err);
}}

#endif

@
@tangle linux.flxh
macro val PLAT_POSIX = true;
macro val PLAT_LINUX = true;
macro val PLAT_BSD = false;
macro val PLAT_MACOSX = false;
macro val PLAT_CYGWIN = false;
macro val PLAT_WIN32 = false;
macro val PLAT_SOLARIS = false;
@
@tangle macosx.flxh
macro val PLAT_POSIX = true;
macro val PLAT_LINUX = false;
macro val PLAT_BSD = true;
macro val PLAT_MACOSX = true;
macro val PLAT_CYGWIN = false;
macro val PLAT_WIN32 = false;
macro val PLAT_SOLARIS = false;
@
@tangle win.flxh
macro val PLAT_POSIX = false;
macro val PLAT_LINUX = false;
macro val PLAT_BSD = false;
macro val PLAT_MACOSX = false;
macro val PLAT_CYGWIN = false;
macro val PLAT_WIN32 = true;
macro val PLAT_SOLARIS = false;
@


