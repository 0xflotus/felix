@title General Unique Facilities
@tangler unique.flx = share/lib/std/control/unique.flx
@h1 General Facilities
@tangle unique.flx
open class Unique 
{
  // box up a value as a unique thing
  fun uniq [T] : T -> _uniq T = "$1";

  // unsafely unpack the unique box
  fun ununiq [T] : _uniq T -> T = "$1";

  // kill a live unique value
  proc kill[T] : uniq T = ";";

  // functor for typing
  typedef fun uniq (T:TYPE):TYPE => _uniq T;

  // peek inside the box without changing livenes state
  fun peek[T] : &(uniq T) -> T = "*$1";
 
  // string representions
  instance[T with Repr[T]] Repr[&(uniq T)] {
    fun repr(x:&(uniq T)) => "uniq " + x.peek.repr;
  }

  instance[T with Str[T]] Str[&(uniq T)] {
    fun str(x:&(uniq T)) => x.peek.str;
  }
}


