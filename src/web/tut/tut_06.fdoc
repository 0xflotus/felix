@title Variables.
@h1 Variables
Felix provides two kinds of variables, @{var} and @{val}.
@felix
var va = 1;
val vl = va;
++va;

println$ va,vl;
@
A @{var} is a storage location, or <em>object</em> 
containing a value. A @{var} is addressable and mutable, its value is stored 
when control passes through its initialiser, or assignment. We say the 
assignment does <em>eager</em> evaluation.
@p
A @{val} is a named expression, it is neither addressable nor mutable,
and must be initialised. Its value is that of its initialiser at
the time of evaluation. Vals can be evaluated eagerly like a @{var},
but they may also be evaluated lazily, at the time of use
like a @{fun}.
@p
The value represented by a @{val} which has an initialiser depending
on a variable, directly by name or indirectly by some other means,
is not precisely specified, and we call this <em>indeterminate</em>
evaluation.
@p
The primary motivation for using @{val}s is to support superior
optimisation. The compiler can choose either eager or lazy evaluation
depending on what seems to be most efficient. If the number of uses
of the @{val} is low, lazy evaluation is usally faster.

