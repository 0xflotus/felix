@h1 For Loops

@h2 Looping over a range of integers

@felix
for var i in 0 upto 3 do
  println$ "index=" + i;
done
// Prints 0,1,2,3 each on their own line
@

@h2 Iterating over a sequence

You can iterate over elements of a sequence using the {for} ... {in} syntax:

@felix
val a = 1,2,3,4; // Create a 4 element tuple
for v in a do
  print(v);
  print(" ");
done
endl;
// Prints 1 2 3 4
@

@h2 Iterating using a generator

If the for loop is given a function that returns an {opt} value, the for loop calls
the function repeatedly until the function returns {None}.  Each value returned as a
{Some} is used as the variable value in the loop:

@felix
var n=10;
gen countdown():opt[int] = {
    if n==0 do
        return None[int];
    else
        val res = n;
        n--;
        return Some res;
    done
}
for n in countdown do
  print$ str(n)+"...";
done
print$ "BLASTOFF!";
// Prints 10...9...8...7...6...5...4...3...2...1...BLASTOFF!
@

@h2 See also

<ul>
<li><a href="gen.fdoc">gen</a></li>
<li><a href="if.fdoc">if</a></li>
</ul>

