//Module        : SDL_endian_h
//Timestamp     : 2006/1/8 3:36:0 UTC
//Timestamp     : 2006/1/8 14:36:0 (local)
//Raw Header    : /usr/include/SDL/SDL_endian.h
//Preprocessor  : gcc -E
//Input file: sdl.flxcc.i
//Flxcc Control : sdl.flxcc
//Felix Version : 1.1.2_rc1

//#define SDL_SwapBE64(X)       (X)
//#define SDL_SwapBE32(X)       (X)
//#define SDL_SwapBE16(X)       (X)
//#define SDL_SwapLE64(X)       SDL_Swap64(X)
//#define SDL_SwapLE32(X)       SDL_Swap32(X)
//#define SDL_SwapLE16(X)       SDL_Swap16(X)
//#define SDL_SwapBE64(X)       SDL_Swap64(X)
//#define SDL_SwapBE32(X)       SDL_Swap32(X)
//#define SDL_SwapBE16(X)       SDL_Swap16(X)
//#define SDL_SwapLE64(X)       (X)
//#define SDL_SwapLE32(X)       (X)
//#define SDL_SwapLE16(X)       (X)
//#define SDL_Swap64(X) (X)
//#define _SDL_endian_h

//INCLUDES
include "SDL/SDL_rwops";
include "SDL/SDL_types";

module SDL_endian_h
{
  requires package "sdl";
  header '#include "SDL_endian.h"';
  open C_hack;
  open SDL_rwops_h;
  open SDL_types_h;

  //FUNCTIONS
  fun SDL_ReadBE16: ptr[SDL_RWops] -> uint16;
  fun SDL_ReadBE32: ptr[SDL_RWops] -> uint32;
  fun SDL_ReadBE64: ptr[SDL_RWops] -> Uint64;
  fun SDL_ReadLE16: ptr[SDL_RWops] -> uint16;
  fun SDL_ReadLE32: ptr[SDL_RWops] -> uint32;
  fun SDL_ReadLE64: ptr[SDL_RWops] -> Uint64;
  fun SDL_Swap16: uint16 -> uint16;
  fun SDL_Swap32: uint32 -> uint32;
  fun SDL_Swap64: Uint64 -> Uint64;
  fun SDL_WriteBE16: ptr[SDL_RWops] * uint16 -> int;
  fun SDL_WriteBE32: ptr[SDL_RWops] * uint32 -> int;
  fun SDL_WriteBE64: ptr[SDL_RWops] * Uint64 -> int;
  fun SDL_WriteLE16: ptr[SDL_RWops] * uint16 -> int;
  fun SDL_WriteLE32: ptr[SDL_RWops] * uint32 -> int;
  fun SDL_WriteLE64: ptr[SDL_RWops] * Uint64 -> int;
}

