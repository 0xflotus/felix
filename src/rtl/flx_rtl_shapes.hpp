#ifndef __FLX_RTL_SHAPES_HPP__
#define __FLX_RTL_SHAPES_HPP__
#include "flx_rtl_config.hpp"
#include "flx_gc.hpp"

namespace flx { namespace rtl {
// ********************************************************
// Shape (RTTI) objects for system classes
// con_t is only an abstract base, so has no fixed shape
// shapes for instance types generated by Felix compiler
// we provide a shape for C 'int' type as well
// ********************************************************

RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const _fthread_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const schannel_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const _uctor_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const _int_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const _address_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const _caddress_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const unit_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const slist_node_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const slist_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const flx_dylink_ptr_map;
RTL_EXTERN extern ::flx::gc::generic::gc_shape_t const flx_libinst_ptr_map;

}}
#endif

