include "plat/config";
include "./flx_plat";
include "./flx_install";
include "./flx_cmdopt";
include "./flx_cache";
include "./flx_pkg";
include "./flx_config";
include "./flx_control";
include "./flx_profile";
include "./flx_run";
include "./flx_depvars";

// Felix version of THIS program (NOT the one being installed
// if you're using flx to install Felix)

var config = #Config::config;

// --------------------------------------------------
// Optionally print a debug line.
// --------------------------------------------------

var dbug = false; // switch off for production
var ECHO= if dbug then 1 else 0;

proc debugln[T with Str[T]] (x:T) {
  dbug ?? fprintln (cerr, "[flx] " + str x);
}

var profile = #dflt_profile;

var control = #dflt_control;

var compile_exts = List::list ('cpp','cxx','c','cc');
var linkexts =  List::list ('o','obj','lib','dll','a','so');

var loopctl = #init_loopctl;
processing_stage1;

var dvars = #cal_depvars;

run_if_required_and_uptodate;

// Need Felix and c++ compile, then run it
dbug??println$ "RECOMPILING!!";

var VERBOSE = "";
if control.DEBUG_COMPILER == 1 do
  VERBOSE="-v";
  debugln "Compiler debugging on";
else
  VERBOSE="-q";
  debugln "Compiler debugging off";
done

if control.DEBUG==1 do
  control.CCFLAGS=control.CCFLAGS+config.DEBUG_FLAGS;
done

run_felix_compiler_if_required;

if control.CCOMPILEIT == 0 do
  debugln "C++ compilation skipped by switch";
elif control.STATIC == 0 do

  debugln "Dynamic linkage";
  cxx_compile_dynamic;

  if control.LINKIT == 0 do
    debugln "Not linking program selected by switch";
  else
    cxx_link_dynamic;
    if control.RUNIT == 1 do
      run_program_dynamic;
    else
      debugln "Not running program selected by switch";
    done
  done
else

  debugln "Static linkage";
  cxx_compile_static;

  if control.LINKIT == 0 do
    debugln "Not linking based on switch";
  else
    cxx_link_static;
    if control.RUNIT == 1 do
      run_program_static;
    else
      debugln "Not running program selected by switch";
    done
  done
done

pexit(0);


