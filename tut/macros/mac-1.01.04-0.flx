// a basic expression macro without parameters
macro fun x() =  {print 1; endl;};
x;

// an expression macro with one argument
macro fun h(z) = z + z;
print (h 1); endl;

// an expression macro denoting a procedure
macro fun f(a) = { print a; endl; };
f 1;
f 2;

// nastier example of rescanning
macro fun a() = b c;
macro fun b(x) = f;
a() 1;
// (b c) 1;
// f 1;
// { print 1; endl; };
// call {print 1; endl; } ();

// finally: recursion
macro fun j(i) =
   if(i>0) then i + j(i-1)
   else 0 endif;
print  (j 5); // 5 + 4 + 3 + 2 + 1 = 16
endl;

val q=1;
macro fun z(q) = q;
print (z q); endl;
