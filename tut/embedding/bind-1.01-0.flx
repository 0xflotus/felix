header """
// This is C++ code!
class gauss;

struct gauss {
  int x;
  int y;

  gauss() : x(0), y(0) {}
  gauss(int _x, int _y) : x(_x), y(_y) {}

  gauss operator +(gauss z) const
  {
    return gauss(x+z.x, y+z.y);
  }
  gauss operator *(gauss z) const
  {
    return gauss (x *z.x - y*z.y, x*z.y + y*z.x);
  }
};
""";

// Now the Felix binding
type gauss = "gauss";
proc _set : &gauss * gauss = "*$1 = $2;";
fun + : gauss * gauss -> gauss = "$1 + $2";
fun * : gauss * gauss -> gauss = "$1 * $2";
fun mkgauss: int * int -> gauss = "gauss($1,$2)";
fun real: gauss -> int = "$1.x";
fun imag: gauss -> int = "$1.y";

// Now a pure Felix procedure
proc gprint(z:gauss) {
  print "(";
  print (real z);
  print ", ";
  print (imag z);
  print ")";
}

// And two pure Felix functions
fun sqr(z:gauss):gauss = {
  return z * z;
}

fun norm(z:gauss): int = {
  return
    real z * real z + imag z * imag z
  ;
}

// Finally, some test code
val z1 = mkgauss(1,2);
val z2 = z1 + z1;
val z3 = sqr z2;
val n = norm z3;
gprint z1; endl;
gprint z2; endl;
gprint z3; endl;
print n; endl;
