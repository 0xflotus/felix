
union int_list =
  | Empty
  | Cons of int * int_list
;

proc xprint (a: int_list)
{
  match a with
  | Empty => { print "[]"; }
  | Cons (?i,?tail) =>
    {
      print i;
      print " ";
      xprint tail;
    }
  endmatch;
}

fun mk(i: int, tl:int_list):int_list =
{
  return
    if(i>0) then mk(i-1,Cons(i,tl))
    else tl
    endif
  ;
}

val a = mk(10,Empty);
print "List= "; xprint a; endl;

fun rev(lst:int_list):int_list =
{
  var result = Empty;
  proc aux(lst:int_list)
  {
    match lst with
    | Empty => {}
    | Cons (?head,?tail) =>
      {
        result = Cons(head,result);
        aux(tail);
      }
    endmatch;
  }
  aux(lst);
  return result;
}

print "Reversed= "; xprint (rev a); endl;
