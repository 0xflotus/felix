//Check typeclasses

typeclass XStr[T] {
  virtual fun str2: T->string;
}

instance XStr[int] {
  fun str2 (x:int):string => str x;
}

open List;

fun foo[T with XStr[T]] (x:list[T]):string =>
  match x with
  | Empty[T] => "()"
  | Cons(?h, ?t) => "(" + (str2 h) + ", " + (foo t) + ")"
  endmatch
;

val x = list(1,2);
print$ foo x; endl;
